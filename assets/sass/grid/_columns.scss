
// Columns
.column {
  float: left;
  padding: 0 $grid_padding;
  margin: 0 $grid_gutter 0 0;

  &:first-of-type,
  &:first-child {
    padding-left: 0;
  }

  &:last-of-type,
  &:last-child {
    padding-right: 0;
    margin-right: 0;
  }

  // Generate Grid
  $i: $grid_base;
  @while $i > 0 {
    &-#{$i} {
      width: ((100% - ($grid_gutter * ($i - 1))) / $i);

      // Responsive
      @include breakpoint(tablet) {}

      @include breakpoint(phone) {
        width: 100%;
        margin-right: 0;
        padding-right: 0;
        padding-left: 0;
        @include rem(margin-bottom, $grid_vertical-space);

        &:last-of-type,
        &:last-child {
          margin-bottom: 0;
        }
      }
    }
    // Increase the counter
    $i: $i - 1;
  }

  // --------- Plain English Fallbacks --------- //

  // One Eighth - 1/8
  @if $grid_base % 8 == 0 {
    &.eighth,
    &.eighths,
    &.one_eighth,
    &.one_eighths {
      @extend .column-#{$grid_base / ($grid_base / 8)};
    }
  }

  // One Seventh - 1/7
  @if $grid_base % 7 == 0 {
    &.seventh,
    &.sevenths,
    &.one_seventh,
    &.one_sevenths {
      @extend .column-#{$grid_base / ($grid_base / 7)};
    }
  }

  // One Sixth - 1/6
  @if $grid_base % 6 == 0 {
    &.sixth,
    &.sixths,
    &.one_sixth,
    &.one_sixths {
      @extend .column-#{$grid_base / ($grid_base / 6)};
    }
  }

  // One Fifth - 1/5
  @if $grid_base % 5 == 0 {
    &.fifth,
    &.fifths,
    &.one_fifth,
    &.one_fifths {
      @extend .column-#{$grid_base / ($grid_base / 5)};
    }
  }

  // One Fourth - 1/4
  @if $grid_base % 4 == 0 {
    &.quarter,
    &.quarters,
    &.fourth,
    &.fourths,
    &.one_quarter,
    &.one_quarters {
      @extend .column-#{$grid_base / ($grid_base / 4)};
    }
  }

  // One Third & Two Third - 1/3 & 2/3
  @if $grid_base % 3 == 0 {
    // One Third
    &.third,
    &.thirds,
    &.one_third,
    &.one_thirds {
      @extend .column-#{$grid_base / ($grid_base / 3)};
    }
    // Two Third - Kind of tricky
    &.two_third,
    &.two_thirds {
      // @extend .column-#{$grid_base / ($grid_base / 3)};
      width: (((100% - ($grid_gutter * (3 - (2 + (1 / 3))))) / 3) * 2);
      @include breakpoint(phone) {
        width: 100%;
        margin-right: 0;
        padding-right: 0;
        padding-left: 0;
        @include rem(margin-bottom, $grid_vertical-space);
      }
    }
  }

  // One Half - 1/2
  @if $grid_base % 2 == 0 {
    &.half,
    &.halfs,
    &.halve,
    &.halves,
    &.one_half,
    &.one_halves {
      @extend .column-#{$grid_base / ($grid_base / 2)};
    }
  }

  // Full - 1/1
  &.full,
  &.full_width,
  &.whole {
    @extend .column-#{$grid_base / ($grid_base)};
    margin-right: 0;
    padding: 0;
  }
}

